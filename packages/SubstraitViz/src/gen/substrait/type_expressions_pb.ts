// SPDX-License-Identifier: Apache-2.0

// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file substrait/type_expressions.proto (package substrait, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Type_Binary, Type_Boolean, Type_Date, Type_FP32, Type_FP64, Type_I16, Type_I32, Type_I64, Type_I8, Type_IntervalYear, Type_Nullability, Type_String, Type_Time, Type_Timestamp, Type_TimestampTZ, Type_UUID } from "./type_pb";
import { file_substrait_type } from "./type_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file substrait/type_expressions.proto.
 */
export const file_substrait_type_expressions: GenFile = /*@__PURE__*/
  fileDesc("CiBzdWJzdHJhaXQvdHlwZV9leHByZXNzaW9ucy5wcm90bxIJc3Vic3RyYWl0IoAoChREZXJpdmF0aW9uRXhwcmVzc2lvbhInCgRib29sGAEgASgLMhcuc3Vic3RyYWl0LlR5cGUuQm9vbGVhbkgAEiAKAmk4GAIgASgLMhIuc3Vic3RyYWl0LlR5cGUuSThIABIiCgNpMTYYAyABKAsyEy5zdWJzdHJhaXQuVHlwZS5JMTZIABIiCgNpMzIYBSABKAsyEy5zdWJzdHJhaXQuVHlwZS5JMzJIABIiCgNpNjQYByABKAsyEy5zdWJzdHJhaXQuVHlwZS5JNjRIABIkCgRmcDMyGAogASgLMhQuc3Vic3RyYWl0LlR5cGUuRlAzMkgAEiQKBGZwNjQYCyABKAsyFC5zdWJzdHJhaXQuVHlwZS5GUDY0SAASKAoGc3RyaW5nGAwgASgLMhYuc3Vic3RyYWl0LlR5cGUuU3RyaW5nSAASKAoGYmluYXJ5GA0gASgLMhYuc3Vic3RyYWl0LlR5cGUuQmluYXJ5SAASMgoJdGltZXN0YW1wGA4gASgLMhkuc3Vic3RyYWl0LlR5cGUuVGltZXN0YW1wQgIYAUgAEiQKBGRhdGUYECABKAsyFC5zdWJzdHJhaXQuVHlwZS5EYXRlSAASJAoEdGltZRgRIAEoCzIULnN1YnN0cmFpdC5UeXBlLlRpbWVIABI1Cg1pbnRlcnZhbF95ZWFyGBMgASgLMhwuc3Vic3RyYWl0LlR5cGUuSW50ZXJ2YWxZZWFySAASNwoMdGltZXN0YW1wX3R6GB0gASgLMhsuc3Vic3RyYWl0LlR5cGUuVGltZXN0YW1wVFpCAhgBSAASJAoEdXVpZBggIAEoCzIULnN1YnN0cmFpdC5UeXBlLlVVSURIABJNCgxpbnRlcnZhbF9kYXkYFCABKAsyNS5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uRXhwcmVzc2lvbkludGVydmFsRGF5SAASVwoRaW50ZXJ2YWxfY29tcG91bmQYKiABKAsyOi5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uRXhwcmVzc2lvbkludGVydmFsQ29tcG91bmRIABJJCgpmaXhlZF9jaGFyGBUgASgLMjMuc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLkV4cHJlc3Npb25GaXhlZENoYXJIABJECgd2YXJjaGFyGBYgASgLMjEuc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLkV4cHJlc3Npb25WYXJDaGFySAASTQoMZml4ZWRfYmluYXJ5GBcgASgLMjUuc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLkV4cHJlc3Npb25GaXhlZEJpbmFyeUgAEkQKB2RlY2ltYWwYGCABKAsyMS5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uRXhwcmVzc2lvbkRlY2ltYWxIABJbChNwcmVjaXNpb25fdGltZXN0YW1wGCggASgLMjwuc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLkV4cHJlc3Npb25QcmVjaXNpb25UaW1lc3RhbXBIABJgChZwcmVjaXNpb25fdGltZXN0YW1wX3R6GCkgASgLMj4uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLkV4cHJlc3Npb25QcmVjaXNpb25UaW1lc3RhbXBUWkgAEkIKBnN0cnVjdBgZIAEoCzIwLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5FeHByZXNzaW9uU3RydWN0SAASPgoEbGlzdBgbIAEoCzIuLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5FeHByZXNzaW9uTGlzdEgAEjwKA21hcBgcIAEoCzItLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5FeHByZXNzaW9uTWFwSAASTQoMdXNlcl9kZWZpbmVkGB4gASgLMjUuc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLkV4cHJlc3Npb25Vc2VyRGVmaW5lZEgAEiIKFHVzZXJfZGVmaW5lZF9wb2ludGVyGB8gASgNQgIYAUgAEh0KE3R5cGVfcGFyYW1ldGVyX25hbWUYISABKAlIABIgChZpbnRlZ2VyX3BhcmFtZXRlcl9uYW1lGCIgASgJSAASGQoPaW50ZWdlcl9saXRlcmFsGCMgASgFSAASOwoIdW5hcnlfb3AYJCABKAsyJy5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uVW5hcnlPcEgAEj0KCWJpbmFyeV9vcBglIAEoCzIoLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5CaW5hcnlPcEgAEjkKB2lmX2Vsc2UYJiABKAsyJi5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uSWZFbHNlSAASRwoOcmV0dXJuX3Byb2dyYW0YJyABKAsyLS5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uUmV0dXJuUHJvZ3JhbUgAGpMBChNFeHByZXNzaW9uRml4ZWRDaGFyEi8KBmxlbmd0aBgBIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhIZChF2YXJpYXRpb25fcG9pbnRlchgCIAEoDRIwCgtudWxsYWJpbGl0eRgDIAEoDjIbLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5GpEBChFFeHByZXNzaW9uVmFyQ2hhchIvCgZsZW5ndGgYASABKAsyHy5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24SGQoRdmFyaWF0aW9uX3BvaW50ZXIYAiABKA0SMAoLbnVsbGFiaWxpdHkYAyABKA4yGy5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRqVAQoVRXhwcmVzc2lvbkZpeGVkQmluYXJ5Ei8KBmxlbmd0aBgBIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhIZChF2YXJpYXRpb25fcG9pbnRlchgCIAEoDRIwCgtudWxsYWJpbGl0eRgDIAEoDjIbLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5GsQBChFFeHByZXNzaW9uRGVjaW1hbBIuCgVzY2FsZRgBIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhIyCglwcmVjaXNpb24YAiABKAsyHy5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24SGQoRdmFyaWF0aW9uX3BvaW50ZXIYAyABKA0SMAoLbnVsbGFiaWxpdHkYBCABKA4yGy5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRqfAQocRXhwcmVzc2lvblByZWNpc2lvblRpbWVzdGFtcBIyCglwcmVjaXNpb24YASABKAsyHy5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24SGQoRdmFyaWF0aW9uX3BvaW50ZXIYAiABKA0SMAoLbnVsbGFiaWxpdHkYAyABKA4yGy5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRqYAQoVRXhwcmVzc2lvbkludGVydmFsRGF5EjIKCXByZWNpc2lvbhgBIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhIZChF2YXJpYXRpb25fcG9pbnRlchgCIAEoDRIwCgtudWxsYWJpbGl0eRgDIAEoDjIbLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5Gp0BChpFeHByZXNzaW9uSW50ZXJ2YWxDb21wb3VuZBIyCglwcmVjaXNpb24YASABKAsyHy5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24SGQoRdmFyaWF0aW9uX3BvaW50ZXIYAiABKA0SMAoLbnVsbGFiaWxpdHkYAyABKA4yGy5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRqhAQoeRXhwcmVzc2lvblByZWNpc2lvblRpbWVzdGFtcFRaEjIKCXByZWNpc2lvbhgBIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhIZChF2YXJpYXRpb25fcG9pbnRlchgCIAEoDRIwCgtudWxsYWJpbGl0eRgDIAEoDjIbLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5Go8BChBFeHByZXNzaW9uU3RydWN0Ei4KBXR5cGVzGAEgAygLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uEhkKEXZhcmlhdGlvbl9wb2ludGVyGAIgASgNEjAKC251bGxhYmlsaXR5GAMgASgOMhsuc3Vic3RyYWl0LlR5cGUuTnVsbGFiaWxpdHkaaAoVRXhwcmVzc2lvbk5hbWVkU3RydWN0Eg0KBW5hbWVzGAEgAygJEkAKBnN0cnVjdBgCIAEoCzIwLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5FeHByZXNzaW9uU3RydWN0GowBCg5FeHByZXNzaW9uTGlzdBItCgR0eXBlGAEgASgLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uEhkKEXZhcmlhdGlvbl9wb2ludGVyGAIgASgNEjAKC251bGxhYmlsaXR5GAMgASgOMhsuc3Vic3RyYWl0LlR5cGUuTnVsbGFiaWxpdHkaugEKDUV4cHJlc3Npb25NYXASLAoDa2V5GAEgASgLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uEi4KBXZhbHVlGAIgASgLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uEhkKEXZhcmlhdGlvbl9wb2ludGVyGAMgASgNEjAKC251bGxhYmlsaXR5GAQgASgOMhsuc3Vic3RyYWl0LlR5cGUuTnVsbGFiaWxpdHkaegoVRXhwcmVzc2lvblVzZXJEZWZpbmVkEhQKDHR5cGVfcG9pbnRlchgBIAEoDRIZChF2YXJpYXRpb25fcG9pbnRlchgCIAEoDRIwCgtudWxsYWJpbGl0eRgDIAEoDjIbLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5GqkBCgZJZkVsc2USNQoMaWZfY29uZGl0aW9uGAEgASgLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uEjIKCWlmX3JldHVybhgCIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhI0CgtlbHNlX3JldHVybhgDIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhrKAQoHVW5hcnlPcBJECgdvcF90eXBlGAEgASgOMjMuc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLlVuYXJ5T3AuVW5hcnlPcFR5cGUSLAoDYXJnGAIgASgLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uIksKC1VuYXJ5T3BUeXBlEh0KGVVOQVJZX09QX1RZUEVfVU5TUEVDSUZJRUQQABIdChlVTkFSWV9PUF9UWVBFX0JPT0xFQU5fTk9UEAEaoAQKCEJpbmFyeU9wEkYKB29wX3R5cGUYASABKA4yNS5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uQmluYXJ5T3AuQmluYXJ5T3BUeXBlEi0KBGFyZzEYAiABKAsyHy5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24SLQoEYXJnMhgDIAEoCzIfLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbiLtAgoMQmluYXJ5T3BUeXBlEh4KGkJJTkFSWV9PUF9UWVBFX1VOU1BFQ0lGSUVEEAASFwoTQklOQVJZX09QX1RZUEVfUExVUxABEhgKFEJJTkFSWV9PUF9UWVBFX01JTlVTEAISGwoXQklOQVJZX09QX1RZUEVfTVVMVElQTFkQAxIZChVCSU5BUllfT1BfVFlQRV9ESVZJREUQBBIWChJCSU5BUllfT1BfVFlQRV9NSU4QBRIWChJCSU5BUllfT1BfVFlQRV9NQVgQBhIfChtCSU5BUllfT1BfVFlQRV9HUkVBVEVSX1RIQU4QBxIcChhCSU5BUllfT1BfVFlQRV9MRVNTX1RIQU4QCBIWChJCSU5BUllfT1BfVFlQRV9BTkQQCRIVChFCSU5BUllfT1BfVFlQRV9PUhAKEhkKFUJJTkFSWV9PUF9UWVBFX0VRVUFMUxALEhkKFUJJTkFSWV9PUF9UWVBFX0NPVkVSUxAMGuoBCg1SZXR1cm5Qcm9ncmFtEk0KC2Fzc2lnbm1lbnRzGAEgAygLMjguc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uLlJldHVyblByb2dyYW0uQXNzaWdubWVudBI5ChBmaW5hbF9leHByZXNzaW9uGAIgASgLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uGk8KCkFzc2lnbm1lbnQSDAoEbmFtZRgBIAEoCRIzCgpleHByZXNzaW9uGAIgASgLMh8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uQgYKBGtpbmRCVwoSaW8uc3Vic3RyYWl0LnByb3RvUAFaKmdpdGh1Yi5jb20vc3Vic3RyYWl0LWlvL3N1YnN0cmFpdC1nby9wcm90b6oCElN1YnN0cmFpdC5Qcm90b2J1ZmIGcHJvdG8z", [file_substrait_type]);

/**
 * @generated from message substrait.DerivationExpression
 */
export type DerivationExpression = Message<"substrait.DerivationExpression"> & {
  /**
   * @generated from oneof substrait.DerivationExpression.kind
   */
  kind: {
    /**
     * @generated from field: substrait.Type.Boolean bool = 1;
     */
    value: Type_Boolean;
    case: "bool";
  } | {
    /**
     * @generated from field: substrait.Type.I8 i8 = 2;
     */
    value: Type_I8;
    case: "i8";
  } | {
    /**
     * @generated from field: substrait.Type.I16 i16 = 3;
     */
    value: Type_I16;
    case: "i16";
  } | {
    /**
     * @generated from field: substrait.Type.I32 i32 = 5;
     */
    value: Type_I32;
    case: "i32";
  } | {
    /**
     * @generated from field: substrait.Type.I64 i64 = 7;
     */
    value: Type_I64;
    case: "i64";
  } | {
    /**
     * @generated from field: substrait.Type.FP32 fp32 = 10;
     */
    value: Type_FP32;
    case: "fp32";
  } | {
    /**
     * @generated from field: substrait.Type.FP64 fp64 = 11;
     */
    value: Type_FP64;
    case: "fp64";
  } | {
    /**
     * @generated from field: substrait.Type.String string = 12;
     */
    value: Type_String;
    case: "string";
  } | {
    /**
     * @generated from field: substrait.Type.Binary binary = 13;
     */
    value: Type_Binary;
    case: "binary";
  } | {
    /**
     * Deprecated in favor of `ExpressionPrecisionTimestamp precision_timestamp`
     *
     * @generated from field: substrait.Type.Timestamp timestamp = 14 [deprecated = true];
     * @deprecated
     */
    value: Type_Timestamp;
    case: "timestamp";
  } | {
    /**
     * @generated from field: substrait.Type.Date date = 16;
     */
    value: Type_Date;
    case: "date";
  } | {
    /**
     * @generated from field: substrait.Type.Time time = 17;
     */
    value: Type_Time;
    case: "time";
  } | {
    /**
     * @generated from field: substrait.Type.IntervalYear interval_year = 19;
     */
    value: Type_IntervalYear;
    case: "intervalYear";
  } | {
    /**
     * Deprecated in favor of `ExpressionPrecisionTimestampTZ precision_timestamp_tz`
     *
     * @generated from field: substrait.Type.TimestampTZ timestamp_tz = 29 [deprecated = true];
     * @deprecated
     */
    value: Type_TimestampTZ;
    case: "timestampTz";
  } | {
    /**
     * @generated from field: substrait.Type.UUID uuid = 32;
     */
    value: Type_UUID;
    case: "uuid";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionIntervalDay interval_day = 20;
     */
    value: DerivationExpression_ExpressionIntervalDay;
    case: "intervalDay";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionIntervalCompound interval_compound = 42;
     */
    value: DerivationExpression_ExpressionIntervalCompound;
    case: "intervalCompound";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionFixedChar fixed_char = 21;
     */
    value: DerivationExpression_ExpressionFixedChar;
    case: "fixedChar";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionVarChar varchar = 22;
     */
    value: DerivationExpression_ExpressionVarChar;
    case: "varchar";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionFixedBinary fixed_binary = 23;
     */
    value: DerivationExpression_ExpressionFixedBinary;
    case: "fixedBinary";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionDecimal decimal = 24;
     */
    value: DerivationExpression_ExpressionDecimal;
    case: "decimal";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionPrecisionTimestamp precision_timestamp = 40;
     */
    value: DerivationExpression_ExpressionPrecisionTimestamp;
    case: "precisionTimestamp";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionPrecisionTimestampTZ precision_timestamp_tz = 41;
     */
    value: DerivationExpression_ExpressionPrecisionTimestampTZ;
    case: "precisionTimestampTz";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionStruct struct = 25;
     */
    value: DerivationExpression_ExpressionStruct;
    case: "struct";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionList list = 27;
     */
    value: DerivationExpression_ExpressionList;
    case: "list";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionMap map = 28;
     */
    value: DerivationExpression_ExpressionMap;
    case: "map";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ExpressionUserDefined user_defined = 30;
     */
    value: DerivationExpression_ExpressionUserDefined;
    case: "userDefined";
  } | {
    /**
     * Deprecated in favor of user_defined, which allows nullability and
     * variations to be specified. If user_defined_pointer is encountered,
     * treat it as being non-nullable and having the default variation.
     *
     * @generated from field: uint32 user_defined_pointer = 31 [deprecated = true];
     * @deprecated
     */
    value: number;
    case: "userDefinedPointer";
  } | {
    /**
     * @generated from field: string type_parameter_name = 33;
     */
    value: string;
    case: "typeParameterName";
  } | {
    /**
     * @generated from field: string integer_parameter_name = 34;
     */
    value: string;
    case: "integerParameterName";
  } | {
    /**
     * @generated from field: int32 integer_literal = 35;
     */
    value: number;
    case: "integerLiteral";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.UnaryOp unary_op = 36;
     */
    value: DerivationExpression_UnaryOp;
    case: "unaryOp";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.BinaryOp binary_op = 37;
     */
    value: DerivationExpression_BinaryOp;
    case: "binaryOp";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.IfElse if_else = 38;
     */
    value: DerivationExpression_IfElse;
    case: "ifElse";
  } | {
    /**
     * @generated from field: substrait.DerivationExpression.ReturnProgram return_program = 39;
     */
    value: DerivationExpression_ReturnProgram;
    case: "returnProgram";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message substrait.DerivationExpression.
 * Use `create(DerivationExpressionSchema)` to create a new message.
 */
export const DerivationExpressionSchema: GenMessage<DerivationExpression> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0);

/**
 * @generated from message substrait.DerivationExpression.ExpressionFixedChar
 */
export type DerivationExpression_ExpressionFixedChar = Message<"substrait.DerivationExpression.ExpressionFixedChar"> & {
  /**
   * @generated from field: substrait.DerivationExpression length = 1;
   */
  length?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionFixedChar.
 * Use `create(DerivationExpression_ExpressionFixedCharSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionFixedCharSchema: GenMessage<DerivationExpression_ExpressionFixedChar> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 0);

/**
 * @generated from message substrait.DerivationExpression.ExpressionVarChar
 */
export type DerivationExpression_ExpressionVarChar = Message<"substrait.DerivationExpression.ExpressionVarChar"> & {
  /**
   * @generated from field: substrait.DerivationExpression length = 1;
   */
  length?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionVarChar.
 * Use `create(DerivationExpression_ExpressionVarCharSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionVarCharSchema: GenMessage<DerivationExpression_ExpressionVarChar> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 1);

/**
 * @generated from message substrait.DerivationExpression.ExpressionFixedBinary
 */
export type DerivationExpression_ExpressionFixedBinary = Message<"substrait.DerivationExpression.ExpressionFixedBinary"> & {
  /**
   * @generated from field: substrait.DerivationExpression length = 1;
   */
  length?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionFixedBinary.
 * Use `create(DerivationExpression_ExpressionFixedBinarySchema)` to create a new message.
 */
export const DerivationExpression_ExpressionFixedBinarySchema: GenMessage<DerivationExpression_ExpressionFixedBinary> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 2);

/**
 * @generated from message substrait.DerivationExpression.ExpressionDecimal
 */
export type DerivationExpression_ExpressionDecimal = Message<"substrait.DerivationExpression.ExpressionDecimal"> & {
  /**
   * @generated from field: substrait.DerivationExpression scale = 1;
   */
  scale?: DerivationExpression;

  /**
   * @generated from field: substrait.DerivationExpression precision = 2;
   */
  precision?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 3;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 4;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionDecimal.
 * Use `create(DerivationExpression_ExpressionDecimalSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionDecimalSchema: GenMessage<DerivationExpression_ExpressionDecimal> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 3);

/**
 * @generated from message substrait.DerivationExpression.ExpressionPrecisionTimestamp
 */
export type DerivationExpression_ExpressionPrecisionTimestamp = Message<"substrait.DerivationExpression.ExpressionPrecisionTimestamp"> & {
  /**
   * @generated from field: substrait.DerivationExpression precision = 1;
   */
  precision?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionPrecisionTimestamp.
 * Use `create(DerivationExpression_ExpressionPrecisionTimestampSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionPrecisionTimestampSchema: GenMessage<DerivationExpression_ExpressionPrecisionTimestamp> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 4);

/**
 * @generated from message substrait.DerivationExpression.ExpressionIntervalDay
 */
export type DerivationExpression_ExpressionIntervalDay = Message<"substrait.DerivationExpression.ExpressionIntervalDay"> & {
  /**
   * @generated from field: substrait.DerivationExpression precision = 1;
   */
  precision?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionIntervalDay.
 * Use `create(DerivationExpression_ExpressionIntervalDaySchema)` to create a new message.
 */
export const DerivationExpression_ExpressionIntervalDaySchema: GenMessage<DerivationExpression_ExpressionIntervalDay> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 5);

/**
 * @generated from message substrait.DerivationExpression.ExpressionIntervalCompound
 */
export type DerivationExpression_ExpressionIntervalCompound = Message<"substrait.DerivationExpression.ExpressionIntervalCompound"> & {
  /**
   * @generated from field: substrait.DerivationExpression precision = 1;
   */
  precision?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionIntervalCompound.
 * Use `create(DerivationExpression_ExpressionIntervalCompoundSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionIntervalCompoundSchema: GenMessage<DerivationExpression_ExpressionIntervalCompound> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 6);

/**
 * @generated from message substrait.DerivationExpression.ExpressionPrecisionTimestampTZ
 */
export type DerivationExpression_ExpressionPrecisionTimestampTZ = Message<"substrait.DerivationExpression.ExpressionPrecisionTimestampTZ"> & {
  /**
   * @generated from field: substrait.DerivationExpression precision = 1;
   */
  precision?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionPrecisionTimestampTZ.
 * Use `create(DerivationExpression_ExpressionPrecisionTimestampTZSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionPrecisionTimestampTZSchema: GenMessage<DerivationExpression_ExpressionPrecisionTimestampTZ> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 7);

/**
 * @generated from message substrait.DerivationExpression.ExpressionStruct
 */
export type DerivationExpression_ExpressionStruct = Message<"substrait.DerivationExpression.ExpressionStruct"> & {
  /**
   * @generated from field: repeated substrait.DerivationExpression types = 1;
   */
  types: DerivationExpression[];

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionStruct.
 * Use `create(DerivationExpression_ExpressionStructSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionStructSchema: GenMessage<DerivationExpression_ExpressionStruct> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 8);

/**
 * @generated from message substrait.DerivationExpression.ExpressionNamedStruct
 */
export type DerivationExpression_ExpressionNamedStruct = Message<"substrait.DerivationExpression.ExpressionNamedStruct"> & {
  /**
   * @generated from field: repeated string names = 1;
   */
  names: string[];

  /**
   * @generated from field: substrait.DerivationExpression.ExpressionStruct struct = 2;
   */
  struct?: DerivationExpression_ExpressionStruct;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionNamedStruct.
 * Use `create(DerivationExpression_ExpressionNamedStructSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionNamedStructSchema: GenMessage<DerivationExpression_ExpressionNamedStruct> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 9);

/**
 * @generated from message substrait.DerivationExpression.ExpressionList
 */
export type DerivationExpression_ExpressionList = Message<"substrait.DerivationExpression.ExpressionList"> & {
  /**
   * @generated from field: substrait.DerivationExpression type = 1;
   */
  type?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionList.
 * Use `create(DerivationExpression_ExpressionListSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionListSchema: GenMessage<DerivationExpression_ExpressionList> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 10);

/**
 * @generated from message substrait.DerivationExpression.ExpressionMap
 */
export type DerivationExpression_ExpressionMap = Message<"substrait.DerivationExpression.ExpressionMap"> & {
  /**
   * @generated from field: substrait.DerivationExpression key = 1;
   */
  key?: DerivationExpression;

  /**
   * @generated from field: substrait.DerivationExpression value = 2;
   */
  value?: DerivationExpression;

  /**
   * @generated from field: uint32 variation_pointer = 3;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 4;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionMap.
 * Use `create(DerivationExpression_ExpressionMapSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionMapSchema: GenMessage<DerivationExpression_ExpressionMap> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 11);

/**
 * @generated from message substrait.DerivationExpression.ExpressionUserDefined
 */
export type DerivationExpression_ExpressionUserDefined = Message<"substrait.DerivationExpression.ExpressionUserDefined"> & {
  /**
   * @generated from field: uint32 type_pointer = 1;
   */
  typePointer: number;

  /**
   * @generated from field: uint32 variation_pointer = 2;
   */
  variationPointer: number;

  /**
   * @generated from field: substrait.Type.Nullability nullability = 3;
   */
  nullability: Type_Nullability;
};

/**
 * Describes the message substrait.DerivationExpression.ExpressionUserDefined.
 * Use `create(DerivationExpression_ExpressionUserDefinedSchema)` to create a new message.
 */
export const DerivationExpression_ExpressionUserDefinedSchema: GenMessage<DerivationExpression_ExpressionUserDefined> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 12);

/**
 * @generated from message substrait.DerivationExpression.IfElse
 */
export type DerivationExpression_IfElse = Message<"substrait.DerivationExpression.IfElse"> & {
  /**
   * @generated from field: substrait.DerivationExpression if_condition = 1;
   */
  ifCondition?: DerivationExpression;

  /**
   * @generated from field: substrait.DerivationExpression if_return = 2;
   */
  ifReturn?: DerivationExpression;

  /**
   * @generated from field: substrait.DerivationExpression else_return = 3;
   */
  elseReturn?: DerivationExpression;
};

/**
 * Describes the message substrait.DerivationExpression.IfElse.
 * Use `create(DerivationExpression_IfElseSchema)` to create a new message.
 */
export const DerivationExpression_IfElseSchema: GenMessage<DerivationExpression_IfElse> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 13);

/**
 * @generated from message substrait.DerivationExpression.UnaryOp
 */
export type DerivationExpression_UnaryOp = Message<"substrait.DerivationExpression.UnaryOp"> & {
  /**
   * @generated from field: substrait.DerivationExpression.UnaryOp.UnaryOpType op_type = 1;
   */
  opType: DerivationExpression_UnaryOp_UnaryOpType;

  /**
   * @generated from field: substrait.DerivationExpression arg = 2;
   */
  arg?: DerivationExpression;
};

/**
 * Describes the message substrait.DerivationExpression.UnaryOp.
 * Use `create(DerivationExpression_UnaryOpSchema)` to create a new message.
 */
export const DerivationExpression_UnaryOpSchema: GenMessage<DerivationExpression_UnaryOp> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 14);

/**
 * @generated from enum substrait.DerivationExpression.UnaryOp.UnaryOpType
 */
export enum DerivationExpression_UnaryOp_UnaryOpType {
  /**
   * @generated from enum value: UNARY_OP_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: UNARY_OP_TYPE_BOOLEAN_NOT = 1;
   */
  BOOLEAN_NOT = 1,
}

/**
 * Describes the enum substrait.DerivationExpression.UnaryOp.UnaryOpType.
 */
export const DerivationExpression_UnaryOp_UnaryOpTypeSchema: GenEnum<DerivationExpression_UnaryOp_UnaryOpType> = /*@__PURE__*/
  enumDesc(file_substrait_type_expressions, 0, 14, 0);

/**
 * @generated from message substrait.DerivationExpression.BinaryOp
 */
export type DerivationExpression_BinaryOp = Message<"substrait.DerivationExpression.BinaryOp"> & {
  /**
   * @generated from field: substrait.DerivationExpression.BinaryOp.BinaryOpType op_type = 1;
   */
  opType: DerivationExpression_BinaryOp_BinaryOpType;

  /**
   * @generated from field: substrait.DerivationExpression arg1 = 2;
   */
  arg1?: DerivationExpression;

  /**
   * @generated from field: substrait.DerivationExpression arg2 = 3;
   */
  arg2?: DerivationExpression;
};

/**
 * Describes the message substrait.DerivationExpression.BinaryOp.
 * Use `create(DerivationExpression_BinaryOpSchema)` to create a new message.
 */
export const DerivationExpression_BinaryOpSchema: GenMessage<DerivationExpression_BinaryOp> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 15);

/**
 * @generated from enum substrait.DerivationExpression.BinaryOp.BinaryOpType
 */
export enum DerivationExpression_BinaryOp_BinaryOpType {
  /**
   * @generated from enum value: BINARY_OP_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: BINARY_OP_TYPE_PLUS = 1;
   */
  PLUS = 1,

  /**
   * @generated from enum value: BINARY_OP_TYPE_MINUS = 2;
   */
  MINUS = 2,

  /**
   * @generated from enum value: BINARY_OP_TYPE_MULTIPLY = 3;
   */
  MULTIPLY = 3,

  /**
   * @generated from enum value: BINARY_OP_TYPE_DIVIDE = 4;
   */
  DIVIDE = 4,

  /**
   * @generated from enum value: BINARY_OP_TYPE_MIN = 5;
   */
  MIN = 5,

  /**
   * @generated from enum value: BINARY_OP_TYPE_MAX = 6;
   */
  MAX = 6,

  /**
   * @generated from enum value: BINARY_OP_TYPE_GREATER_THAN = 7;
   */
  GREATER_THAN = 7,

  /**
   * @generated from enum value: BINARY_OP_TYPE_LESS_THAN = 8;
   */
  LESS_THAN = 8,

  /**
   * @generated from enum value: BINARY_OP_TYPE_AND = 9;
   */
  AND = 9,

  /**
   * @generated from enum value: BINARY_OP_TYPE_OR = 10;
   */
  OR = 10,

  /**
   * @generated from enum value: BINARY_OP_TYPE_EQUALS = 11;
   */
  EQUALS = 11,

  /**
   * @generated from enum value: BINARY_OP_TYPE_COVERS = 12;
   */
  COVERS = 12,
}

/**
 * Describes the enum substrait.DerivationExpression.BinaryOp.BinaryOpType.
 */
export const DerivationExpression_BinaryOp_BinaryOpTypeSchema: GenEnum<DerivationExpression_BinaryOp_BinaryOpType> = /*@__PURE__*/
  enumDesc(file_substrait_type_expressions, 0, 15, 0);

/**
 * @generated from message substrait.DerivationExpression.ReturnProgram
 */
export type DerivationExpression_ReturnProgram = Message<"substrait.DerivationExpression.ReturnProgram"> & {
  /**
   * @generated from field: repeated substrait.DerivationExpression.ReturnProgram.Assignment assignments = 1;
   */
  assignments: DerivationExpression_ReturnProgram_Assignment[];

  /**
   * @generated from field: substrait.DerivationExpression final_expression = 2;
   */
  finalExpression?: DerivationExpression;
};

/**
 * Describes the message substrait.DerivationExpression.ReturnProgram.
 * Use `create(DerivationExpression_ReturnProgramSchema)` to create a new message.
 */
export const DerivationExpression_ReturnProgramSchema: GenMessage<DerivationExpression_ReturnProgram> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 16);

/**
 * @generated from message substrait.DerivationExpression.ReturnProgram.Assignment
 */
export type DerivationExpression_ReturnProgram_Assignment = Message<"substrait.DerivationExpression.ReturnProgram.Assignment"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: substrait.DerivationExpression expression = 2;
   */
  expression?: DerivationExpression;
};

/**
 * Describes the message substrait.DerivationExpression.ReturnProgram.Assignment.
 * Use `create(DerivationExpression_ReturnProgram_AssignmentSchema)` to create a new message.
 */
export const DerivationExpression_ReturnProgram_AssignmentSchema: GenMessage<DerivationExpression_ReturnProgram_Assignment> = /*@__PURE__*/
  messageDesc(file_substrait_type_expressions, 0, 16, 0);

